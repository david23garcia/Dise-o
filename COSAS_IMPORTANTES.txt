
IDEA GENERAL PARA PRESENTAR EL PROYECTO: Una ciudad pequeña solicita crear una aplicación para que los comercios locales puedan publicar sus articulos y que estos puedan ser vendidos a partir de esta aplicación.

Cosas que Hacer:
	- Maquetas. OK
	- Revisar Diagrama de Clases.
	- Revisar Vuetify para comproabr que todo se puede hacer y son componentes que existen. OK
	- Revisar Ings y Pings documetno de diseño. OK
	- Revisar Documentacion Firebase como funciona. OK
	- Identificar TODA la funcionalidad de la app.
	- Unificar funcionalidad similar.
	- Esquema con las funciones necesarias que hay hacer.
	- Diagrama de Secuencia en funcion al Esquema.

Diseño: Decidir bien el "diagrama de clases" con los objetos que vamos a tener en la aplicación. La iteración entre los objetos.
Intentar hacer un diagrama del modelo MVC para buscar las distintas clases/modulos que vamos a implementar y que va a tener cada uno. 

Funcionalidad Basica APP:
	- Login/Logout. AUTH
	- Registro. Registro de Usuarios lo da AUT, el de Comercio hay que crearlo.
	- Insertar Articulos. INSERT en Firebase
	- Modificar Articulos. Update en Firebase
	- Comprar. Metodo nuevo modificando distintos documentos y colecciones
	- Visualizar. Get de Firebase
	- Gestion Imganes. (Cloud Firebase)
	- Motor de Busqueda. (Get by en firebase)
	- Ordenacion ??.

	https://firebase.google.com/docs/auth/web/password-auth?hl=es-419
	https://firebase.google.com/docs/auth/admin/manage-sessions?hl=es-419
	https://firebase.google.com/docs/auth/admin/create-custom-tokens?hl=es-419

IDEAS:
	- Crud/DAO generico donde le pase la info y el tipo y se guardara, eliminara, actualizara el Firebase
	- Hacer borrado Logico. (incluir una variable isDisable)
	- Carritos solo puede haber uno activo, una vez se realice el pago, se finaliza y se convierte en pedido.
	- Modelo 3 CAPAS: Vista, Servicio y DAO
			- Vista: Nuxt/Vue.
			- Servicio: Gestión de todo.
			- Repository: Solo llamadas a Firebase.
	- FUNCION PAGAR:
		1. Recorrer todos los articulos del Carrito
			1.1 Si el articulo.shopID existe en algun pedido de los creados -> insertar este articulo al pedido del comercio.
		 	1.2 Si no, creamos el pedido del Comercio.
		2. Añadimos todos los pedidos creados a la lista de pedidos del usuario.
		3. Eliminamos el carrito (eliminacion fisica)

COSAS QUE PREGUNTAR:
	- Usuario de Firebase puede tener todos los campos que yo quiera? o solo los que me estipula la app? 
	- Tokens de sesion para comprobar los roles?¿?¿ Como funciona esto con Firebase??????
	- Por favor, una ayudita de como montar las sesiones y token en nuxt y firebase.
	- Creamos ya el proyecto padre para meter los subproyectos? 

FUNCIONALIDAD:
	- Registrar/Añadir: 
		- Comercio. OK
		- Usuario. OK
		- Empleado. OK
		- Articulo. OK
		- Comentario. OK
		- Valoración. OK
		- Metodo de Envio. OK
	- Modificar Pass:
		- Usuario. OK
		- Empleado. OK
	- Modificar/Bloquear:
		- Comercio. OK
		- Usuario. OK
		- Empleado. OK
	- Modificar Información:
		- Usuario. OK
		- Comercio. OK
	- Modificar Otros:
		- Cantidad Articulos. OK
		- Estado Pedido. OK
		- Precio Articulo. OK
	- Visualizar:
		- Perfil Usuario. OK
		- Perfil Empleado. OK
		- Comercio. OK
		- Articulo. OK
		- Carrito. OK
		- Pedido. OK
	- Delete (logico):
		- Usuario. OK
		- Comercio. OK
		- Empleado. OK
		- Articulo. OK
		- Articulo Carrito. OK
		- Metodo Envio. OK

	- Pagar/Realizar Pedido.
		- Crear Pedido. 
		- Eliminar Carrito (No Logico).
		- Seleccionar Metodo Envio.
		- Modificar Articulos.
	- Cancelar Pedido (No Logico). delete
		- Eliminar Pedido.
		- Modificar Articulos.
	- Login/Logout -> Auth.
	- Agregar Articulo al Carrito. OK
	- Visualizar todos los Articulos. OK
	- Visualizar todos los Articulos de una tienda. OK
	- Visualizar todos los usuarios. OK
	- visualizar todos los empleados de una tienda. OK

INFO NUXT
https://github.com/i62navpm/Tutorial-Nuxt#que-nuxt-funciona
